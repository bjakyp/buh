plugins {
    id 'io.jmix' version '1.5.2'
    id 'java'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.5.2'
}

group = 'kg.infosystems'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'hu.blackbelt.bundles.poi:org.apache.poi:4.1.2_2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation("org.postgresql:postgresql")

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'io.jmix.translations:jmix-translations-ru'
    themes 'io.jmix.ui:jmix-ui-themes'
    implementation 'io.jmix.ui:jmix-ui-themes'
    implementation 'org.eclipse.jdt.core.compiler:ecj:4.3.1'

    implementation 'io.jmix.reports:jmix-reports-starter'
    implementation 'io.jmix.reports:jmix-reports-ui-starter'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.7.7'
}

test {
    useJUnitPlatform()
}

tasks.register('toDocker', Copy) {
    dependsOn('bootJar')
    from(layout.buildDirectory.file("libs/$rootProject.name-${rootProject.version}.jar"))
    into(layout.projectDirectory.dir('docker/app'))
    rename {
        'app.jar'
    }
}
